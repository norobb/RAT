name: Build Client Executable

on:
  push:
    branches: [main]
    paths:
      - 'client.py'

permissions:
  contents: write
jobs:
  build-client:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Ensure requirements.txt exists
        run: |
          # Use -f to check if a regular file exists
          if [ ! -f requirements.txt ]; then
            echo "" > requirements.txt
          fi
        shell: bash

      - name: Install build dependencies
        run: pip install --upgrade pip wheel setuptools

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Build client executable
        run: |
          pip install pyinstaller
          # On Linux, the executable will be named 'client' (no .exe extension)
          # The icon argument might behave differently on Linux/macOS
          pyinstaller --noconsole --onefile --icon=icon.ico client.py || pyinstaller --noconsole --onefile client.py

      - name: Create executables directory
        run: |
          # Use -d to check if a directory exists
          if [ ! -d executables ]; then
            mkdir executables
          fi
        shell: bash

      - name: Move executable to executables folder (Linux)
        # Note: On ubuntu-latest, the executable will not have a .exe extension.
        # This step is specifically for Linux/macOS and needs adjustment for Windows.
        # You might consider separate jobs for Windows/Linux builds if you need .exe.
        run: |
          mv dist/client executables/client-linux
        shell: bash

      - name: Upload Executable Artifact
        uses: actions/upload-artifact@v4
        with:
          name: client-executable-linux
          path: executables/*

      - name: Commit and push executables to main branch
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git
          git fetch origin main
          git checkout main
          git pull origin main
          git add executables/*
          # Check if there are actual changes before committing
          git diff --cached --quiet || git commit -m "Update executables [skip ci]"
          git push origin main