name: Build and Commit Client Executables

on:
  push:
    branches: [main]
    paths:
      - 'client.py'
      - 'requirements.txt'
      - 'icon.ico'

permissions:
  contents: write

jobs:
  build-clients:
    strategy:
      matrix:
        include:
          - os: windows-latest
            exe_name: client-windows.exe
            artifact_name: client-executable-windows
            pyinstaller_icon_arg: "--icon=icon.ico"
          - os: ubuntu-latest
            exe_name: client-linux
            artifact_name: client-executable-linux
            pyinstaller_icon_arg: "" # No icon for Linux
          - os: macos-latest
            exe_name: client-macos
            artifact_name: client-executable-macos
            pyinstaller_icon_arg: "" # PyInstaller on macOS needs .icns, skipping for now
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build client executable
        run: |
          pyinstaller --noconsole --onefile ${{ matrix.pyinstaller_icon_arg }} client.py

      - name: Move executable
        shell: bash
        run: |
          SOURCE_FILE=$(ls dist/client* | head -n 1)
          DEST_FILE="executables/${{ matrix.exe_name }}"
          echo "Moving $SOURCE_FILE to $DEST_FILE"
          mv "$SOURCE_FILE" "$DEST_FILE"

      - name: Upload Executable Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: executables/${{ matrix.exe_name }}

  commit-executables:
    needs: build-clients
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: executables
          merge-multiple: true # Merges all artifacts into the single 'executables' directory

      - name: List downloaded files
        run: ls -lR executables

      - name: Commit and push executables
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git
          
          # Pull latest changes from the branch to avoid conflicts
          git pull origin main
          
          # Add all new/changed executables
          git add executables/*
          
          # Commit only if there are changes
          if ! git diff --cached --quiet; then
            git commit -m "Update client executables for Windows, Linux, and macOS [skip ci]"
            git push origin main
          else
            echo "No changes to commit."
          fi
