name: Build and Release

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executable
        run: |
          pyinstaller --noconsole --onefile client.py
        shell: bash

      - name: Rename artifact
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            mv dist/client.exe client-windows.exe
          elif [ "$RUNNER_OS" == "Linux" ]; then
            mv dist/client client-linux
          elif [ "$RUNNER_OS" == "macOS" ]; then
            mv dist/client client-macos
          fi
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: client-${{ runner.os }}
          path: |
            client-*

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/client-windows/client-windows.exe
            artifacts/client-linux/client-linux
            artifacts/client-macos/client-macos
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
